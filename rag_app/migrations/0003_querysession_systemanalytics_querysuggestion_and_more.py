# Generated by Django 4.2 on 2025-09-02 19:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('rag_app', '0002_remove_embedding_vector_data_embedding_vector'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuerySession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_name', models.CharField(blank=True, help_text='User-defined session name', max_length=255)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('query_count', models.IntegerField(default=0)),
                ('total_tokens_used', models.IntegerField(default=0)),
                ('total_response_time_ms', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='SystemAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.FloatField()),
                ('metric_unit', models.CharField(blank=True, help_text="e.g., 'ms', 'count', 'percent'", max_length=50)),
                ('category', models.CharField(help_text="e.g., 'performance', 'usage', 'errors'", max_length=50)),
                ('subcategory', models.CharField(blank=True, max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rag_app.document')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rag_app.querysession')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='QuerySuggestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_query', models.TextField()),
                ('suggested_query', models.TextField()),
                ('improvement_reason', models.TextField(help_text='Why this suggestion was made')),
                ('suggestion_type', models.CharField(choices=[('expansion', 'Query Expansion'), ('refinement', 'Query Refinement'), ('correction', 'Spelling/Grammar Correction'), ('clarification', 'Clarification Request')], max_length=50)),
                ('was_accepted', models.BooleanField(blank=True, null=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('confidence_score', models.FloatField(default=0.0, help_text='AI confidence in suggestion (0-1)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query_text', models.TextField()),
                ('query_hash', models.CharField(help_text='SHA256 hash of query for deduplication', max_length=64)),
                ('response_text', models.TextField()),
                ('response_source', models.CharField(help_text='LLM model used', max_length=100)),
                ('chunks_retrieved', models.IntegerField(default=0)),
                ('similarity_threshold', models.FloatField()),
                ('max_similarity_score', models.FloatField(blank=True, null=True)),
                ('search_time_ms', models.IntegerField(default=0)),
                ('generation_time_ms', models.IntegerField(default=0)),
                ('total_response_time_ms', models.IntegerField(default=0)),
                ('tokens_used', models.IntegerField(default=0)),
                ('is_bookmarked', models.BooleanField(default=False)),
                ('user_rating', models.IntegerField(blank=True, help_text='1-5 star rating', null=True)),
                ('user_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('documents_used', models.ManyToManyField(blank=True, related_name='query_history', to='rag_app.document')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='rag_app.querysession')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='systemanalytics',
            index=models.Index(fields=['metric_name', 'recorded_at'], name='rag_app_sys_metric__546988_idx'),
        ),
        migrations.AddIndex(
            model_name='systemanalytics',
            index=models.Index(fields=['category', 'recorded_at'], name='rag_app_sys_categor_e44033_idx'),
        ),
        migrations.AddIndex(
            model_name='systemanalytics',
            index=models.Index(fields=['user', 'recorded_at'], name='rag_app_sys_user_id_8acb53_idx'),
        ),
        migrations.AddIndex(
            model_name='querysuggestion',
            index=models.Index(fields=['user', 'was_accepted'], name='rag_app_que_user_id_2aeaf1_idx'),
        ),
        migrations.AddIndex(
            model_name='querysuggestion',
            index=models.Index(fields=['suggestion_type'], name='rag_app_que_suggest_f0e431_idx'),
        ),
        migrations.AddIndex(
            model_name='querysession',
            index=models.Index(fields=['user', 'is_active'], name='rag_app_que_user_id_65776c_idx'),
        ),
        migrations.AddIndex(
            model_name='querysession',
            index=models.Index(fields=['last_activity'], name='rag_app_que_last_ac_15c8b8_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationhistory',
            index=models.Index(fields=['session', 'created_at'], name='rag_app_con_session_8f4d0c_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationhistory',
            index=models.Index(fields=['query_hash'], name='rag_app_con_query_h_99621b_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationhistory',
            index=models.Index(fields=['is_bookmarked'], name='rag_app_con_is_book_490110_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationhistory',
            index=models.Index(fields=['user_rating'], name='rag_app_con_user_ra_5001a7_idx'),
        ),
    ]
