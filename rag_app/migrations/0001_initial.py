# Generated by Django 4.2 on 2025-09-02 16:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.IntegerField()),
                ('file_type', models.CharField(max_length=50)),
                ('mime_type', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('content_hash', models.CharField(max_length=64, unique=True)),
                ('chunk_count', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('processed', 'Processed'), ('failed', 'Failed')], default='uploaded', max_length=20)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('chunk_index', models.IntegerField()),
                ('start_char', models.IntegerField()),
                ('end_char', models.IntegerField()),
                ('token_count', models.IntegerField(default=0)),
                ('word_count', models.IntegerField(default=0)),
                ('char_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='rag_app.document')),
            ],
            options={
                'ordering': ['document', 'chunk_index'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('value_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='QueryLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query_text', models.TextField()),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('response_text', models.TextField(blank=True)),
                ('similarity_threshold', models.FloatField(default=0.8)),
                ('chunks_found', models.IntegerField(default=0)),
                ('llm_model', models.CharField(blank=True, max_length=100)),
                ('llm_provider', models.CharField(default='openrouter', max_length=50)),
                ('prompt_tokens', models.IntegerField(default=0)),
                ('completion_tokens', models.IntegerField(default=0)),
                ('total_cost', models.DecimalField(decimal_places=6, default=0.0, max_digits=10)),
                ('search_time', models.FloatField(default=0.0)),
                ('llm_time', models.FloatField(default=0.0)),
                ('total_time', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_rating', models.IntegerField(blank=True, choices=[(1, 'Very Poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True)),
                ('feedback_text', models.TextField(blank=True)),
                ('source_chunks', models.ManyToManyField(blank=True, to='rag_app.documentchunk')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Embedding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vector_data', models.TextField()),
                ('model_name', models.CharField(default='all-mpnet-base-v2', max_length=100)),
                ('model_version', models.CharField(default='1.0', max_length=50)),
                ('dimensions', models.IntegerField(default=768)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processing_time', models.FloatField(default=0.0)),
                ('chunk', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='embedding', to='rag_app.documentchunk')),
            ],
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['user'], name='rag_app_que_user_id_c9cab8_idx'),
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['created_at'], name='rag_app_que_created_bcc784_idx'),
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['llm_model'], name='rag_app_que_llm_mod_0d3074_idx'),
        ),
        migrations.AddIndex(
            model_name='embedding',
            index=models.Index(fields=['model_name'], name='rag_app_emb_model_n_838c69_idx'),
        ),
        migrations.AddIndex(
            model_name='embedding',
            index=models.Index(fields=['created_at'], name='rag_app_emb_created_23b4ac_idx'),
        ),
        migrations.AddIndex(
            model_name='documentchunk',
            index=models.Index(fields=['document', 'chunk_index'], name='rag_app_doc_documen_bc68dc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentchunk',
            unique_together={('document', 'chunk_index')},
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['status'], name='rag_app_doc_status_6d3e98_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['file_type'], name='rag_app_doc_file_ty_0eadd1_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['uploaded_by'], name='rag_app_doc_uploade_b42ac4_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['content_hash'], name='rag_app_doc_content_12be6b_idx'),
        ),
    ]
